definitions:
  common.DefaultResponse:
    properties:
      data: {}
      developerMessage:
        type: string
      http_status:
        type: string
      resultCode:
        type: string
      total:
        type: integer
    type: object
  dto.CreateBankDto:
    properties:
      bankCode:
        type: string
      bankName:
        type: string
      userInserted:
        type: string
    required:
    - bankCode
    - bankName
    type: object
  dto.PayloadLogin:
    properties:
      emailName:
        description: ID        uuid.UUID `json:"id"`
        type: string
      password:
        type: string
    type: object
  dto.PayloadRegister:
    properties:
      emailName:
        type: string
      password:
        type: string
    type: object
  dto.UpdateBankDto:
    properties:
      bankCode:
        type: string
      bankName:
        type: string
      lastUserId:
        type: string
    required:
    - bankCode
    - bankName
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Get all the existing auths
      parameters:
      - description: auth
        in: body
        name: authDto
        required: true
        schema:
          $ref: '#/definitions/dto.PayloadLogin'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/common.DefaultResponse'
      security:
      - ApiKeyAuth: []
      summary: List existing auths
      tags:
      - auths
  /auth/register:
    post:
      consumes:
      - application/json
      description: create new user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.PayloadRegister'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: create user
      tags:
      - users
  /bank/{oid}:
    get:
      consumes:
      - application/json
      description: update new bank
      parameters:
      - description: oid
        in: path
        name: oid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/common.DefaultResponse'
      security:
      - ApiKeyAuth: []
      summary: find bank by oid
      tags:
      - banks
    put:
      consumes:
      - application/json
      description: update existing bank
      parameters:
      - description: oid
        in: path
        name: oid
        required: true
        type: string
      - description: bank
        in: body
        name: bank
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateBankDto'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: update bank by oid
      tags:
      - banks
  /bank/create:
    post:
      consumes:
      - application/json
      description: create new bank
      parameters:
      - description: bank
        in: body
        name: bank
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBankDto'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: create bank
      tags:
      - banks
  /bank/delete/{oid}:
    delete:
      consumes:
      - application/json
      description: delete bank by oid
      parameters:
      - description: oid
        in: path
        name: oid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: delete bank
      tags:
      - banks
  /bank/q:
    post:
      consumes:
      - application/json
      description: Get all the existing banks
      parameters:
      - description: bank
        in: body
        name: bankDto
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBankDto'
      - description: page Index
        in: query
        maximum: 10
        minimum: 1
        name: pageIndex
        type: integer
      - description: page Size
        in: query
        maximum: 10
        minimum: 1
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/common.DefaultResponse'
      security:
      - ApiKeyAuth: []
      summary: List existing banks
      tags:
      - banks
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
